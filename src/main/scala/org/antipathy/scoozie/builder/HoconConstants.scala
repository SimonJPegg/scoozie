package org.antipathy.scoozie.builder

/**
  * Object for storing hocon constant names
  */
object HoconConstants {

  val alertContacts: String = "alert-contacts"
  val alertEvents: String = "alert-events"
  val applicationPath: String = "application-path"
  val arguments: String = "arguments"
  val body: String = "body"
  val captureOutput: String = "capture-output"
  val cc: String = "cc"
  val chmod: String = "chmod"
  val command: String = "command"
  val commandLineArguments: String = "command-line-arguments"
  val configuration: String = "configuration"
  val contentType: String = "content-type"
  val coordinator: String = "coordinator"
  val credentials: String = "credentials"
  val decision: String = "decision"
  val default: String = "default"
  val delete: String = "delete"
  val dirFiles: String = "dir-files"
  val distcp: String = "distcp"
  val email: String = "email"
  val end: String = "end"
  val environmentVariables: String = "environment-variables"
  val errorTo: String = "error-to"
  val files: String = "files"
  val filesystem: String = "filesystem"
  val fork: String = "fork"
  val frequency: String = "frequency"
  val hive: String = "hive"
  val host: String = "host"
  val java: String = "java"
  val javaJar: String = "java-jar"
  val javaOptions: String = "java-options"
  val jobTracker: String = "job-tracker"
  val jobXml: String = "job-xml"
  val join: String = "join"
  val kill: String = "kill"
  val mainClass: String = "main-class"
  val maxDuration: String = "max-duration"
  val message: String = "message"
  val mkDir: String = "mkdir"
  val move: String = "move"
  val name: String = "name"
  val nameNode: String = "name-node"
  val nominalTime = "nominal-time"
  val notificationMsg = "notification-message"
  val okTo: String = "ok-to"
  val parameters: String = "parameters"
  val params: String = "params"
  val path: String = "path"
  val paths: String = "paths"
  val permissions: String = "permissions"
  val pig: String = "pig"
  val prepare: String = "prepare"
  val propagateConfiguration: String = "propagate-configuration"
  val script: String = "script"
  val scriptLocation: String = "script-location"
  val scriptName: String = "script-name"
  val shell: String = "shell"
  val shouldEnd: String = "should-end"
  val shouldStart: String = "should-start"
  val sla: String = "sla"
  val source: String = "source"
  val spark: String = "spark"
  val sparkJar: String = "spark-jar"
  val sparkJobName: String = "spark-job-name"
  val sparkMasterUrl: String = "spark-master-url"
  val sparkMode: String = "spark-mode"
  val sparkOptions: String = "spark-options"
  val sqoop: String = "sqoop"
  val ssh: String = "ssh"
  val start: String = "start"
  val steps: String = "steps"
  val subject: String = "subject"
  val subworflow: String = "subworflow"
  val switches: String = "switches"
  val target: String = "target"
  val timezone: String = "timezone"
  val to: String = "to"
  val touchz: String = "touchz"
  val transitions: String = "transitions"
  val transitionSymbol = " -> "
  val typ: String = "type"
  val upstreamApps: String = "upstream-applications"
  val validate: String = "validate"
  val workflow: String = "workflow"
  val yarnConfig: String = "yarn-config"
}
