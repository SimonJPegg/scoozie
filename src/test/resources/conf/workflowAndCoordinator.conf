workflow {
  name: "someworkflow"
  path: "somepath"
  credentials {
    name: "someCredentials"
    type: "credentialsType"
    configuration: {
      credentials1:"value1",
      credentials2:"value2",
      credentials3:"value3",
      credentials4:"value4"
    }
  }
  transitions: [
    {
      type:"start"
      ok-to:"decisionNode"
    },
    {
      name:"decisionNode"
      type:"decision"
      default: "sparkAction"
      switches: {
        sparkAction: "someVar eq 1"
        hiveAction: "someOtherVar eq someVar"
      }
    }
    {
      name:"sparkAction"
      type:"spark"
      job-xml: "someSettings"
      spark-master-url: "masterurl"
      spark-mode: "mode"
      spark-job-name: "Jobname"
      main-class: "somemainclass"
      spark-jar: "spark.jar"
      spark-options: "spark-options"
      command-line-arguments: []
      prepare: {
        delete: "deletePath"
        mkdir: "makePath"
      }
      files: []
      configuration: {}
      ok-to: "shellAction"
      error-to: "errorEmail"
    },
    {
      name:"hiveAction"
      type: "hive"
      job-xml: "settings"
      script-name: "script.hql"
      script-location: "/some/location"
      parameters: []
      files: []
      configuration: {}
      ok-to: "shellAction"
      error-to: "errorEmail"
    },
    {
      name:"shellAction"
      type:"shell"
      script-name: "script.sh"
      script-location: "/some/location"
      command-line-arguments: []
      environment-variables: []
      files: []
      configuration: {}
      ok-to: "end"
      error-to: "errorEmail"
    },
    {
      name:"errorEmail"
      type:"email"
      to: ["a@a.com"]
      cc: []
      subject: "hello"
      body: "yep"
      ok-to: "kill"
      error-to: "kill"
    },
    {
      type: "kill"
      message: "workflow is kill"
    },
    {
      type:"end"
    }
  ]
  configuration: {
    workflow1:"value1",
    workflow2:"value2",
    workflow3:"value3",
    workflow4:"value4"
  }
  yarn-config {
    name-node: "someNameNode"
    job-tracker: "someJobTracker"
  }
}
coordinator: {
  name: "someCoordinator"
  frequency: "someFreq"
  start: "someStart"
  end: "someEnd"
  timezone: "someTimezone"
  configuration: {
    prop1: value1
    prop2: value2
    prop3: value3
    prop4: value4
  }
}